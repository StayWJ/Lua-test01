---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wenwenjie.
--- DateTime: 2021/11/3 16:16
---

--- 队列类
local Queue = {}

function Queue.__index(queue, key)
    --print('-- 取值key = '..key)
    if type(Queue[key]) ~= 'function' then
        -- 不是函数时，返回具体子类的字段
        --print('-- 取字段key = '..key)
        return rawget(queue, key)
    else
        -- 是函数时，返回父类的函数
        --print('-- 取函数key = '..key)
        package.path[key] = val
        return rawget(Queue, key)
    end
end

--- 创建一个队列
--- 这里是用 . 的声明是为了避免子类也出现 new 的调用方法
function Queue.new()
    local queue = {front = 0, rear = 0}
    --setmetatable(queue, Queue)
    return queue
end

--- 推入一个元素
function Queue:push(val)
    self[self.rear] = val
    self.rear = self.rear + 1
end

--- 推出一个元素
function Queue:pop()
    -- 队列为空，直接结束
    if self:isEmpty() then return nil end
    local result = self[self.front]
    self[self.front] = nil -- 设空，便于垃圾回收
    self.front = self.front + 1
    return result
end

--- 队列判空
function Queue:isEmpty()
    return self.rear == self.front
end

--- 遍历队列
function Queue:showAll()
    -- 队列为空，直接结束
    if self:isEmpty() then return end
    -- 遍历输出
    print('开始遍历', self)
    for i = self.front, self.rear - 1 do
        print(i - self.front, self[i])
    end
    print('结束遍历', self)
    print('----------')
end

local queue = Queue.new()
queue:pop()
queue:showAll()
queue:push(1)
queue:push(2)
queue:showAll()
queue:pop()
queue:showAll()

return Queue


--local queue1 = Queue.new()
--queue1:pop()
--queue1:showAll()
--queue1:push(-1)
--queue1:push(-2)
--queue1:showAll()